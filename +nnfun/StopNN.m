function [Y,Xf,Af] = StopNN(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%s
% Generated by Neural Network Toolbox function genFunction, 23-Jul-2015 11:42:42.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-0.582497746075963;-0.496044142298002;-0.999998672326938;-0.999999997613455;-0.477585455671001;-0.468765896273813;-0.999998832758875;-0.999999248949718];
  x1_step1_gain = [1.76884811855292;1.84887238775667;1.00000082545028;1.00000000248081;2.08244056613219;1.96207978703015;1.00000171182966;1.0000003755529];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.2130937618635835;2.3060466930847605;1.5354874403292293;-1.6916573977259406;1.539846376460269;-1.7379830468028707;-1.7109728078046504;1.1182051981752281;0.77884257600928908;0.45673103418534466;-1.4333943109746867;-0.81250941395749099;-0.30556632566970876;-0.03213076071405277;0.49003069006949812;0.10148530249607328;-0.61590466196682581;-1.1585970009671012;0.020040337996701633;-0.87474476792211542;-0.76537093840666837;-0.71895171180665496;1.8344695020308732;-0.8583595205232144;0.80234188455910449;-1.9440870323012336;-1.4540419742780777;-2.1552307192222475;2.5695670329327944;1.6188710619804472];
  IW1_1 = [-0.48490099398425635 -0.12648516140227656 0.95104368259316219 -0.8983449836763201 0.97029990219724793 -0.5507774761651042 -0.88116485537629363 0.62077172471897202;-0.24115361671215613 0.024456242386701341 0.84080482146291835 1.1307371544219142 -0.33997194979322343 1.3594580389928206 -0.25903364083562919 -0.35158438368152783;-0.92287753850902132 1.6290504120298228 0.19229274699614432 -1.7115180946815247 -1.5664016806003853 -0.18128701088397231 0.94838261735387175 -0.46328402152309428;1.021605296554134 0.9934265919709222 1.0164474467671003 0.0088324110790875075 -0.72554276458680478 -0.88337152225819615 -0.51406167479879517 -0.029345633067222165;-1.3663178543947991 -0.60303790754629638 0.84714052221766167 0.098862257533323922 0.14085284570569814 0.51022489082680988 -1.0669063624775224 0.4772297075157409;0.3769613622591122 -0.59891948326707611 -0.19458991878821347 -0.055993703045988476 -0.42990035193470155 0.79591271971170474 0.35731625129972816 -1.6258443247541778;0.49285086486674257 0.38924176913640007 1.0259138156194449 0.33275510898343164 -1.0062096221724821 -0.33493884188647499 -0.12999146567292566 -1.0475606332503078;-3.4767448333535338 -0.95050350347814017 -0.22543330671148276 -0.58010553396539177 -3.0838303462843544 -4.2142235463977142 0.38257209029245814 -1.6128554386301019;0.19822461231274235 -1.2660514903510207 -0.21910008551190577 0.28297400523850624 1.5357637804020317 -1.5098761500863058 -0.14774735913988229 -1.6784683476803552;-2.1635004015131303 1.3684727918915316 0.5829127742598238 1.1084376442739599 -0.46718846977751166 3.936350668312814 -0.46104698976872205 -0.27378543090114654;0.17002140252192541 -2.9697124088483102 2.4042767855487432 0.091863726784400648 2.718145569790118 -4.0284924354334484 2.0933990756547272 1.769101124092114;0.18311524135554902 0.3832114391737515 -0.92882338958693567 -0.80469463699046495 -0.44750425353369 1.1599159462313167 0.17794270311601249 -1.1944216382928166;0.34698810869590302 0.62146622703189769 -1.1023767063046459 -0.13091104788932192 1.1154531728492005 1.68551410956329 0.85196434355733119 0.96797141517485008;-0.15231975058613484 -3.3385510662775499 -0.43966349165599933 -1.5438497191418812 -1.2936509140431809 -1.0728229890911438 1.0193170554952673 0.55972100668435787;-0.22544000073494216 1.7014211126235832 0.73174709479350708 -0.48735164110019852 1.7564955896981467 -1.2808820414812181 0.2938941734010494 -0.35940059072896186;-0.96483328074368258 -0.14162653716348864 0.94890001255851708 -0.65047495203172678 -1.045165805241737 0.23603026210920589 0.98073418468630846 0.76290444603054852;-0.71833829598164545 -0.74719398176274698 -0.71350700911433351 -1.0775790402654069 -0.59101800398686788 -0.64690874579772495 0.82229150770430204 -0.83484888500813059;-3.0557830137356525 2.4004744987327573 0.74591334323251779 1.1758472863168186 -2.5167760089670406 -2.021859281729546 0.20282429129522353 0.87730142168206748;0.56695133608086268 3.7517415833103658 1.9450990057689519 -0.91892885497053411 1.4508395742770965 -0.19696706134658667 2.1044176182525542 0.57623249060806636;-0.29131317760639225 1.0140710363588856 0.35535609501252663 -1.1249592635523575 0.83861196264110516 -0.82461037783921654 0.18843591535061757 -0.94108990791898628;-1.2613478246631094 -2.5489556649956628 -0.025047397854129932 -0.69361812500436193 -1.2005860596728328 -3.4816127503971193 0.37258606286817852 1.8453057520393545;-1.1464439572596394 0.0424150747034754 -0.25891324048167558 0.84171866285967234 -0.69679707587159811 -1.4281447066332931 -0.60692002305870996 0.42351563988570079;0.71624066231181471 -0.78289450780883885 -0.084958332910181844 -0.27549558722690465 0.31883866001239186 0.0073222207906236091 -0.86492110086375373 1.2336053005608447;-1.8497097775980769 -2.3194646848228171 0.58386424316895102 -0.54303297731379685 -1.0520071383595653 1.4043859115899768 1.0103237356380801 0.86056798240738763;0.80934048126373737 -0.67250739795488856 -1.308683209239456 -0.61907032767921633 1.265908456962997 0.84412297364371902 -0.72726882144694571 0.4987380261708792;-0.60787770993067158 0.88184242904088717 0.82039992697525033 -1.1960914526993893 0.013230560516905175 0.52629960331819048 -0.71352124983532106 -0.37929489694918905;-0.001497553773385861 1.6823322429488357 -0.36340213435880697 0.88487625691038108 -0.7061194215719877 1.6154399752609485 -0.79767997435319138 1.3607479907899505;-1.1852848822287521 0.61369660725380992 -0.84147036449452017 0.7435394597567343 0.79175952017521956 -0.30890729492381036 0.62066767262059352 1.0715798152390796;0.15929526416229037 -0.82667229550226329 -0.36140279983596868 0.19659467868944494 0.39950028917827823 -0.84093743898105955 -0.88193544139125357 -0.18600288935848339;0.64798396763199329 2.1325817081213128 -1.0472882890983863 0.06263051330270486 -0.49970638902058401 0.35936440097096461 -1.3147239840173561 -1.3558586257004059];
  
  % Layer 2
  b2 = -1.9262586047237413;
  LW2_1 = [-0.79159191166425402 -1.8502542729681519 -1.2739612334138963 0.23340061979414128 -0.66419580627411923 2.1742403866258511 1.3787478145665315 -4.813247471968447 -1.4164205235804315 3.150871323467626 4.9659232550592449 1.0255334416851898 1.4360826970387406 -2.3920962920960589 -1.3660856240406332 0.64703928521542109 1.0259234024658832 3.5000133695999915 -3.1844842005070224 1.5641840707864145 3.3667858357027214 0.084846342345088768 -1.7030080981049496 -1.9383352911866003 0.5117843529590107 2.2755464807025199 1.2637048896120799 1.4671897752311864 -1.1149533293009106 1.2444991937061256];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
